Terminals unused in grammar

    REPOP


Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER optional_parameter RETURNS type ';'
    3                | error

    4 optional_variable: variable optional_variable
    5                  | %empty

    6 variable: IDENTIFIER ':' type IS statement_
    7         | error

    8 optional_parameter: optional_parameter RETURNS type ';'
    9                   | parameter

   10 parameter: IDENTIFIER ':' type
   11          | %empty

   12 type: INTEGER
   13     | REAL
   14     | BOOLEAN

   15 body: BEGIN_ statement_ END ';'

   16 statement_: statement
   17           | error

   18 statement: expression ';'
   19          | REDUCE operator reductions ENDREDUCE ';'
   20          | IF expression THEN statement_ ELSE statement_ ENDIF ';'
   21          | CASE expression IS optional_cases OTHERS ARROW statement_ ENDCASE ';'

   22 operator: OROP
   23         | ANDOP
   24         | RELOP
   25         | ADDOP
   26         | MULOP
   27         | REMOP
   28         | EXPOP
   29         | NOTOP

   30 reductions: reductions statement_
   31           | %empty

   32 optional_cases: case optional_cases
   33               | %empty

   34 case: WHEN INT_LITERAL ARROW statement_
   35     | error

   36 expression: expression ANDOP relation
   37           | relation

   38 relation: relation RELOP term
   39         | term

   40 term: term ADDOP factor
   41     | factor

   42 factor: factor MULOP primary
   43       | factor REMOP primary
   44       | exponent

   45 exponent: factor EXPOP notion
   46         | notion

   47 notion: notion NOTOP primary
   48       | primary

   49 primary: '(' expression ')'
   50        | INT_LITERAL
   51        | REAL_LITERAL
   52        | BOOL_LITERAL
   53        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 49
    ')' (41) 49
    ':' (58) 6 10
    ';' (59) 2 8 15 18 19 20 21
    error (256) 3 7 17 35
    IDENTIFIER <iden> (258) 2 6 10 53
    INT_LITERAL <value> (259) 34 50
    REAL_LITERAL <value> (260) 51
    BOOL_LITERAL <value> (261) 52
    ADDOP <oper> (262) 25 40
    MULOP <oper> (263) 26 42
    RELOP <oper> (264) 24 38
    REMOP <oper> (265) 27 43
    NOTOP <oper> (266) 29 47
    REPOP <oper> (267)
    EXPOP <oper> (268) 28 45
    ANDOP <oper> (269) 23 36
    OROP <oper> (270) 22
    INTEGER (271) 12
    BEGIN_ (272) 15
    BOOLEAN (273) 14
    END (274) 15
    ENDREDUCE (275) 19
    FUNCTION (276) 2
    IS (277) 6 21
    REDUCE (278) 19
    RETURNS (279) 2 8
    IF <value> (280) 20
    THEN <value> (281) 20
    WHEN <value> (282) 34
    ELSE <value> (283) 20
    ENDIF <value> (284) 20
    CASE <value> (285) 21
    OTHERS <value> (286) 21
    ARROW <value> (287) 21 34
    ENDCASE <value> (288) 21
    REAL <value> (289) 13


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    function (40)
        on left: 1
        on right: 0
    function_header (41)
        on left: 2 3
        on right: 1
    optional_variable (42)
        on left: 4 5
        on right: 1 4
    variable (43)
        on left: 6 7
        on right: 4
    optional_parameter (44)
        on left: 8 9
        on right: 2 8
    parameter (45)
        on left: 10 11
        on right: 9
    type (46)
        on left: 12 13 14
        on right: 2 6 8 10
    body <value> (47)
        on left: 15
        on right: 1
    statement_ <value> (48)
        on left: 16 17
        on right: 6 15 20 21 30 34
    statement <value> (49)
        on left: 18 19 20 21
        on right: 16
    operator <oper> (50)
        on left: 22 23 24 25 26 27 28 29
        on right: 19
    reductions <value> (51)
        on left: 30 31
        on right: 19 30
    optional_cases (52)
        on left: 32 33
        on right: 21 32
    case (53)
        on left: 34 35
        on right: 32
    expression <value> (54)
        on left: 36 37
        on right: 18 20 21 36 49
    relation <value> (55)
        on left: 38 39
        on right: 36 37 38
    term <value> (56)
        on left: 40 41
        on right: 38 39 40
    factor <value> (57)
        on left: 42 43 44
        on right: 40 41 42 43 45
    exponent <value> (58)
        on left: 45 46
        on right: 44
    notion <value> (59)
        on left: 47 48
        on right: 45 46 47
    primary <value> (60)
        on left: 49 50 51 52 53
        on right: 42 43 47 48


State 0

    0 $accept: . function $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    function         go to state 3
    function_header  go to state 4


State 1

    3 function_header: error .

    $default  reduce using rule 3 (function_header)


State 2

    2 function_header: FUNCTION . IDENTIFIER optional_parameter RETURNS type ';'

    IDENTIFIER  shift, and go to state 5


State 3

    0 $accept: function . $end

    $end  shift, and go to state 6


State 4

    1 function: function_header . optional_variable body

    error       shift, and go to state 7
    IDENTIFIER  shift, and go to state 8

    BEGIN_  reduce using rule 5 (optional_variable)

    optional_variable  go to state 9
    variable           go to state 10


State 5

    2 function_header: FUNCTION IDENTIFIER . optional_parameter RETURNS type ';'

    IDENTIFIER  shift, and go to state 11

    $default  reduce using rule 11 (parameter)

    optional_parameter  go to state 12
    parameter           go to state 13


State 6

    0 $accept: function $end .

    $default  accept


State 7

    7 variable: error .

    $default  reduce using rule 7 (variable)


State 8

    6 variable: IDENTIFIER . ':' type IS statement_

    ':'  shift, and go to state 14


State 9

    1 function: function_header optional_variable . body

    BEGIN_  shift, and go to state 15

    body  go to state 16


State 10

    4 optional_variable: variable . optional_variable

    error       shift, and go to state 7
    IDENTIFIER  shift, and go to state 8

    BEGIN_  reduce using rule 5 (optional_variable)

    optional_variable  go to state 17
    variable           go to state 10


State 11

   10 parameter: IDENTIFIER . ':' type

    ':'  shift, and go to state 18


State 12

    2 function_header: FUNCTION IDENTIFIER optional_parameter . RETURNS type ';'
    8 optional_parameter: optional_parameter . RETURNS type ';'

    RETURNS  shift, and go to state 19


State 13

    9 optional_parameter: parameter .

    $default  reduce using rule 9 (optional_parameter)


State 14

    6 variable: IDENTIFIER ':' . type IS statement_

    INTEGER  shift, and go to state 20
    BOOLEAN  shift, and go to state 21
    REAL     shift, and go to state 22

    type  go to state 23


State 15

   15 body: BEGIN_ . statement_ END ';'

    error         shift, and go to state 24
    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    REDUCE        shift, and go to state 29
    IF            shift, and go to state 30
    CASE          shift, and go to state 31
    '('           shift, and go to state 32

    statement_  go to state 33
    statement   go to state 34
    expression  go to state 35
    relation    go to state 36
    term        go to state 37
    factor      go to state 38
    exponent    go to state 39
    notion      go to state 40
    primary     go to state 41


State 16

    1 function: function_header optional_variable body .

    $default  reduce using rule 1 (function)


State 17

    4 optional_variable: variable optional_variable .

    $default  reduce using rule 4 (optional_variable)


State 18

   10 parameter: IDENTIFIER ':' . type

    INTEGER  shift, and go to state 20
    BOOLEAN  shift, and go to state 21
    REAL     shift, and go to state 22

    type  go to state 42


State 19

    2 function_header: FUNCTION IDENTIFIER optional_parameter RETURNS . type ';'
    8 optional_parameter: optional_parameter RETURNS . type ';'

    INTEGER  shift, and go to state 20
    BOOLEAN  shift, and go to state 21
    REAL     shift, and go to state 22

    type  go to state 43


State 20

   12 type: INTEGER .

    $default  reduce using rule 12 (type)


State 21

   14 type: BOOLEAN .

    $default  reduce using rule 14 (type)


State 22

   13 type: REAL .

    $default  reduce using rule 13 (type)


State 23

    6 variable: IDENTIFIER ':' type . IS statement_

    IS  shift, and go to state 44


State 24

   17 statement_: error .

    $default  reduce using rule 17 (statement_)


State 25

   53 primary: IDENTIFIER .

    $default  reduce using rule 53 (primary)


State 26

   50 primary: INT_LITERAL .

    $default  reduce using rule 50 (primary)


State 27

   51 primary: REAL_LITERAL .

    $default  reduce using rule 51 (primary)


State 28

   52 primary: BOOL_LITERAL .

    $default  reduce using rule 52 (primary)


State 29

   19 statement: REDUCE . operator reductions ENDREDUCE ';'

    ADDOP  shift, and go to state 45
    MULOP  shift, and go to state 46
    RELOP  shift, and go to state 47
    REMOP  shift, and go to state 48
    NOTOP  shift, and go to state 49
    EXPOP  shift, and go to state 50
    ANDOP  shift, and go to state 51
    OROP   shift, and go to state 52

    operator  go to state 53


State 30

   20 statement: IF . expression THEN statement_ ELSE statement_ ENDIF ';'

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    '('           shift, and go to state 32

    expression  go to state 54
    relation    go to state 36
    term        go to state 37
    factor      go to state 38
    exponent    go to state 39
    notion      go to state 40
    primary     go to state 41


State 31

   21 statement: CASE . expression IS optional_cases OTHERS ARROW statement_ ENDCASE ';'

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    '('           shift, and go to state 32

    expression  go to state 55
    relation    go to state 36
    term        go to state 37
    factor      go to state 38
    exponent    go to state 39
    notion      go to state 40
    primary     go to state 41


State 32

   49 primary: '(' . expression ')'

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    '('           shift, and go to state 32

    expression  go to state 56
    relation    go to state 36
    term        go to state 37
    factor      go to state 38
    exponent    go to state 39
    notion      go to state 40
    primary     go to state 41


State 33

   15 body: BEGIN_ statement_ . END ';'

    END  shift, and go to state 57


State 34

   16 statement_: statement .

    $default  reduce using rule 16 (statement_)


State 35

   18 statement: expression . ';'
   36 expression: expression . ANDOP relation

    ANDOP  shift, and go to state 58
    ';'    shift, and go to state 59


State 36

   37 expression: relation .
   38 relation: relation . RELOP term

    RELOP  shift, and go to state 60

    $default  reduce using rule 37 (expression)


State 37

   39 relation: term .
   40 term: term . ADDOP factor

    ADDOP  shift, and go to state 61

    $default  reduce using rule 39 (relation)


State 38

   41 term: factor .
   42 factor: factor . MULOP primary
   43       | factor . REMOP primary
   45 exponent: factor . EXPOP notion

    MULOP  shift, and go to state 62
    REMOP  shift, and go to state 63
    EXPOP  shift, and go to state 64

    $default  reduce using rule 41 (term)


State 39

   44 factor: exponent .

    $default  reduce using rule 44 (factor)


State 40

   46 exponent: notion .
   47 notion: notion . NOTOP primary

    NOTOP  shift, and go to state 65

    $default  reduce using rule 46 (exponent)


State 41

   48 notion: primary .

    $default  reduce using rule 48 (notion)


State 42

   10 parameter: IDENTIFIER ':' type .

    $default  reduce using rule 10 (parameter)


State 43

    2 function_header: FUNCTION IDENTIFIER optional_parameter RETURNS type . ';'
    8 optional_parameter: optional_parameter RETURNS type . ';'

    ';'  shift, and go to state 66


State 44

    6 variable: IDENTIFIER ':' type IS . statement_

    error         shift, and go to state 24
    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    REDUCE        shift, and go to state 29
    IF            shift, and go to state 30
    CASE          shift, and go to state 31
    '('           shift, and go to state 32

    statement_  go to state 67
    statement   go to state 34
    expression  go to state 35
    relation    go to state 36
    term        go to state 37
    factor      go to state 38
    exponent    go to state 39
    notion      go to state 40
    primary     go to state 41


State 45

   25 operator: ADDOP .

    $default  reduce using rule 25 (operator)


State 46

   26 operator: MULOP .

    $default  reduce using rule 26 (operator)


State 47

   24 operator: RELOP .

    $default  reduce using rule 24 (operator)


State 48

   27 operator: REMOP .

    $default  reduce using rule 27 (operator)


State 49

   29 operator: NOTOP .

    $default  reduce using rule 29 (operator)


State 50

   28 operator: EXPOP .

    $default  reduce using rule 28 (operator)


State 51

   23 operator: ANDOP .

    $default  reduce using rule 23 (operator)


State 52

   22 operator: OROP .

    $default  reduce using rule 22 (operator)


State 53

   19 statement: REDUCE operator . reductions ENDREDUCE ';'

    $default  reduce using rule 31 (reductions)

    reductions  go to state 68


State 54

   20 statement: IF expression . THEN statement_ ELSE statement_ ENDIF ';'
   36 expression: expression . ANDOP relation

    ANDOP  shift, and go to state 58
    THEN   shift, and go to state 69


State 55

   21 statement: CASE expression . IS optional_cases OTHERS ARROW statement_ ENDCASE ';'
   36 expression: expression . ANDOP relation

    ANDOP  shift, and go to state 58
    IS     shift, and go to state 70


State 56

   36 expression: expression . ANDOP relation
   49 primary: '(' expression . ')'

    ANDOP  shift, and go to state 58
    ')'    shift, and go to state 71


State 57

   15 body: BEGIN_ statement_ END . ';'

    ';'  shift, and go to state 72


State 58

   36 expression: expression ANDOP . relation

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    '('           shift, and go to state 32

    relation  go to state 73
    term      go to state 37
    factor    go to state 38
    exponent  go to state 39
    notion    go to state 40
    primary   go to state 41


State 59

   18 statement: expression ';' .

    $default  reduce using rule 18 (statement)


State 60

   38 relation: relation RELOP . term

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    '('           shift, and go to state 32

    term      go to state 74
    factor    go to state 38
    exponent  go to state 39
    notion    go to state 40
    primary   go to state 41


State 61

   40 term: term ADDOP . factor

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    '('           shift, and go to state 32

    factor    go to state 75
    exponent  go to state 39
    notion    go to state 40
    primary   go to state 41


State 62

   42 factor: factor MULOP . primary

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    '('           shift, and go to state 32

    primary  go to state 76


State 63

   43 factor: factor REMOP . primary

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    '('           shift, and go to state 32

    primary  go to state 77


State 64

   45 exponent: factor EXPOP . notion

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    '('           shift, and go to state 32

    notion   go to state 78
    primary  go to state 41


State 65

   47 notion: notion NOTOP . primary

    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    '('           shift, and go to state 32

    primary  go to state 79


State 66

    2 function_header: FUNCTION IDENTIFIER optional_parameter RETURNS type ';' .
    8 optional_parameter: optional_parameter RETURNS type ';' .

    RETURNS   reduce using rule 8 (optional_parameter)
    $default  reduce using rule 2 (function_header)


State 67

    6 variable: IDENTIFIER ':' type IS statement_ .

    $default  reduce using rule 6 (variable)


State 68

   19 statement: REDUCE operator reductions . ENDREDUCE ';'
   30 reductions: reductions . statement_

    error         shift, and go to state 24
    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    ENDREDUCE     shift, and go to state 80
    REDUCE        shift, and go to state 29
    IF            shift, and go to state 30
    CASE          shift, and go to state 31
    '('           shift, and go to state 32

    statement_  go to state 81
    statement   go to state 34
    expression  go to state 35
    relation    go to state 36
    term        go to state 37
    factor      go to state 38
    exponent    go to state 39
    notion      go to state 40
    primary     go to state 41


State 69

   20 statement: IF expression THEN . statement_ ELSE statement_ ENDIF ';'

    error         shift, and go to state 24
    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    REDUCE        shift, and go to state 29
    IF            shift, and go to state 30
    CASE          shift, and go to state 31
    '('           shift, and go to state 32

    statement_  go to state 82
    statement   go to state 34
    expression  go to state 35
    relation    go to state 36
    term        go to state 37
    factor      go to state 38
    exponent    go to state 39
    notion      go to state 40
    primary     go to state 41


State 70

   21 statement: CASE expression IS . optional_cases OTHERS ARROW statement_ ENDCASE ';'

    error  shift, and go to state 83
    WHEN   shift, and go to state 84

    OTHERS  reduce using rule 33 (optional_cases)

    optional_cases  go to state 85
    case            go to state 86


State 71

   49 primary: '(' expression ')' .

    $default  reduce using rule 49 (primary)


State 72

   15 body: BEGIN_ statement_ END ';' .

    $default  reduce using rule 15 (body)


State 73

   36 expression: expression ANDOP relation .
   38 relation: relation . RELOP term

    RELOP  shift, and go to state 60

    $default  reduce using rule 36 (expression)


State 74

   38 relation: relation RELOP term .
   40 term: term . ADDOP factor

    ADDOP  shift, and go to state 61

    $default  reduce using rule 38 (relation)


State 75

   40 term: term ADDOP factor .
   42 factor: factor . MULOP primary
   43       | factor . REMOP primary
   45 exponent: factor . EXPOP notion

    MULOP  shift, and go to state 62
    REMOP  shift, and go to state 63
    EXPOP  shift, and go to state 64

    $default  reduce using rule 40 (term)


State 76

   42 factor: factor MULOP primary .

    $default  reduce using rule 42 (factor)


State 77

   43 factor: factor REMOP primary .

    $default  reduce using rule 43 (factor)


State 78

   45 exponent: factor EXPOP notion .
   47 notion: notion . NOTOP primary

    NOTOP  shift, and go to state 65

    $default  reduce using rule 45 (exponent)


State 79

   47 notion: notion NOTOP primary .

    $default  reduce using rule 47 (notion)


State 80

   19 statement: REDUCE operator reductions ENDREDUCE . ';'

    ';'  shift, and go to state 87


State 81

   30 reductions: reductions statement_ .

    $default  reduce using rule 30 (reductions)


State 82

   20 statement: IF expression THEN statement_ . ELSE statement_ ENDIF ';'

    ELSE  shift, and go to state 88


State 83

   35 case: error .

    $default  reduce using rule 35 (case)


State 84

   34 case: WHEN . INT_LITERAL ARROW statement_

    INT_LITERAL  shift, and go to state 89


State 85

   21 statement: CASE expression IS optional_cases . OTHERS ARROW statement_ ENDCASE ';'

    OTHERS  shift, and go to state 90


State 86

   32 optional_cases: case . optional_cases

    error  shift, and go to state 83
    WHEN   shift, and go to state 84

    OTHERS  reduce using rule 33 (optional_cases)

    optional_cases  go to state 91
    case            go to state 86


State 87

   19 statement: REDUCE operator reductions ENDREDUCE ';' .

    $default  reduce using rule 19 (statement)


State 88

   20 statement: IF expression THEN statement_ ELSE . statement_ ENDIF ';'

    error         shift, and go to state 24
    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    REDUCE        shift, and go to state 29
    IF            shift, and go to state 30
    CASE          shift, and go to state 31
    '('           shift, and go to state 32

    statement_  go to state 92
    statement   go to state 34
    expression  go to state 35
    relation    go to state 36
    term        go to state 37
    factor      go to state 38
    exponent    go to state 39
    notion      go to state 40
    primary     go to state 41


State 89

   34 case: WHEN INT_LITERAL . ARROW statement_

    ARROW  shift, and go to state 93


State 90

   21 statement: CASE expression IS optional_cases OTHERS . ARROW statement_ ENDCASE ';'

    ARROW  shift, and go to state 94


State 91

   32 optional_cases: case optional_cases .

    $default  reduce using rule 32 (optional_cases)


State 92

   20 statement: IF expression THEN statement_ ELSE statement_ . ENDIF ';'

    ENDIF  shift, and go to state 95


State 93

   34 case: WHEN INT_LITERAL ARROW . statement_

    error         shift, and go to state 24
    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    REDUCE        shift, and go to state 29
    IF            shift, and go to state 30
    CASE          shift, and go to state 31
    '('           shift, and go to state 32

    statement_  go to state 96
    statement   go to state 34
    expression  go to state 35
    relation    go to state 36
    term        go to state 37
    factor      go to state 38
    exponent    go to state 39
    notion      go to state 40
    primary     go to state 41


State 94

   21 statement: CASE expression IS optional_cases OTHERS ARROW . statement_ ENDCASE ';'

    error         shift, and go to state 24
    IDENTIFIER    shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    REDUCE        shift, and go to state 29
    IF            shift, and go to state 30
    CASE          shift, and go to state 31
    '('           shift, and go to state 32

    statement_  go to state 97
    statement   go to state 34
    expression  go to state 35
    relation    go to state 36
    term        go to state 37
    factor      go to state 38
    exponent    go to state 39
    notion      go to state 40
    primary     go to state 41


State 95

   20 statement: IF expression THEN statement_ ELSE statement_ ENDIF . ';'

    ';'  shift, and go to state 98


State 96

   34 case: WHEN INT_LITERAL ARROW statement_ .

    $default  reduce using rule 34 (case)


State 97

   21 statement: CASE expression IS optional_cases OTHERS ARROW statement_ . ENDCASE ';'

    ENDCASE  shift, and go to state 99


State 98

   20 statement: IF expression THEN statement_ ELSE statement_ ENDIF ';' .

    $default  reduce using rule 20 (statement)


State 99

   21 statement: CASE expression IS optional_cases OTHERS ARROW statement_ ENDCASE . ';'

    ';'  shift, and go to state 100


State 100

   21 statement: CASE expression IS optional_cases OTHERS ARROW statement_ ENDCASE ';' .

    $default  reduce using rule 21 (statement)
