State 89 conflicts: 1 shift/reduce


Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';'
    3                | FUNCTION IDENTIFIER RETURNS type ';'
    4                | error ';'

    5 optional_variable: variable optional_variable
    6                  | %empty

    7 variable: IDENTIFIER ':' type IS statement_
    8         | error

    9 parameters: parameter optional_parameter

   10 optional_parameter: optional_parameter ',' parameter
   11                   | %empty

   12 parameter: IDENTIFIER ':' type

   13 type: INTEGER
   14     | REAL
   15     | BOOLEAN

   16 body: BEGIN_ statement_ END ';'

   17 statement_: statement
   18           | error

   19 statement: expression ';'
   20          | REDUCE operator reductions ENDREDUCE ';'
   21          | IF expression THEN statement_ ELSE statement_ ENDIF ';'
   22          | CASE expression IS optional_cases OTHERS ARROW statement_ ENDCASE ';'

   23 operator: OROP
   24         | ANDOP
   25         | RELOP
   26         | ADDOP
   27         | MULOP
   28         | REMOP
   29         | EXPOP
   30         | NOTOP

   31 optional_cases: optional_cases case
   32               | error

   33 case: WHEN INT_LITERAL ARROW statement_

   34 reductions: reductions statement_
   35           | %empty

   36 expression: expression OROP binary
   37           | binary

   38 binary: binary ANDOP relation
   39       | relation

   40 relation: relation RELOP term
   41         | term

   42 term: term ADDOP factor
   43     | factor

   44 factor: factor MULOP exponent
   45       | factor REMOP exponent
   46       | exponent

   47 exponent: unary
   48         | exponent EXPOP exponent

   49 unary: NOTOP primary
   50      | primary

   51 primary: '(' expression ')'
   52        | INT_LITERAL
   53        | REAL_LITERAL
   54        | BOOL_LITERAL
   55        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 51
    ')' (41) 51
    ',' (44) 10
    ':' (58) 7 12
    ';' (59) 2 3 4 16 19 20 21 22
    error (256) 4 8 18 32
    IDENTIFIER <iden> (258) 2 3 7 12 55
    INT_LITERAL <value> (259) 33 52
    REAL_LITERAL <value> (260) 53
    BOOL_LITERAL <value> (261) 54
    ADDOP <oper> (262) 26 42
    MULOP <oper> (263) 27 44
    RELOP <oper> (264) 25 40
    REMOP <oper> (265) 28 45
    NOTOP <oper> (266) 30 49
    EXPOP <oper> (267) 29 48
    ANDOP <oper> (268) 24 38
    OROP <oper> (269) 23 36
    INTEGER (270) 13
    BEGIN_ (271) 16
    BOOLEAN (272) 15
    END (273) 16
    ENDREDUCE (274) 20
    FUNCTION (275) 2 3
    IS (276) 7 22
    REDUCE (277) 20
    RETURNS (278) 2 3
    IF <value> (279) 21
    THEN <value> (280) 21
    WHEN <value> (281) 33
    ELSE <value> (282) 21
    ENDIF <value> (283) 21
    CASE <value> (284) 22
    OTHERS <value> (285) 22
    ARROW <value> (286) 22 33
    ENDCASE <value> (287) 22
    REAL <value> (288) 14


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    function (40)
        on left: 1
        on right: 0
    function_header (41)
        on left: 2 3 4
        on right: 1
    optional_variable (42)
        on left: 5 6
        on right: 1 5
    variable (43)
        on left: 7 8
        on right: 5
    parameters (44)
        on left: 9
        on right: 2
    optional_parameter (45)
        on left: 10 11
        on right: 9 10
    parameter (46)
        on left: 12
        on right: 9 10
    type (47)
        on left: 13 14 15
        on right: 2 3 7 12
    body <value> (48)
        on left: 16
        on right: 1
    statement_ <value> (49)
        on left: 17 18
        on right: 7 16 21 22 33 34
    statement <value> (50)
        on left: 19 20 21 22
        on right: 17
    operator <oper> (51)
        on left: 23 24 25 26 27 28 29 30
        on right: 20
    optional_cases <value> (52)
        on left: 31 32
        on right: 22 31
    case <value> (53)
        on left: 33
        on right: 31
    reductions <value> (54)
        on left: 34 35
        on right: 20 34
    expression <value> (55)
        on left: 36 37
        on right: 19 21 22 36 51
    binary <value> (56)
        on left: 38 39
        on right: 36 37 38
    relation <value> (57)
        on left: 40 41
        on right: 38 39 40
    term <value> (58)
        on left: 42 43
        on right: 40 41 42
    factor <value> (59)
        on left: 44 45 46
        on right: 42 43 44 45
    exponent <value> (60)
        on left: 47 48
        on right: 44 45 46 48
    unary <value> (61)
        on left: 49 50
        on right: 47
    primary <value> (62)
        on left: 51 52 53 54 55
        on right: 49 50


State 0

    0 $accept: . function $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    function         go to state 3
    function_header  go to state 4


State 1

    4 function_header: error . ';'

    ';'  shift, and go to state 5


State 2

    2 function_header: FUNCTION . IDENTIFIER parameters RETURNS type ';'
    3                | FUNCTION . IDENTIFIER RETURNS type ';'

    IDENTIFIER  shift, and go to state 6


State 3

    0 $accept: function . $end

    $end  shift, and go to state 7


State 4

    1 function: function_header . optional_variable body

    error       shift, and go to state 8
    IDENTIFIER  shift, and go to state 9

    BEGIN_  reduce using rule 6 (optional_variable)

    optional_variable  go to state 10
    variable           go to state 11


State 5

    4 function_header: error ';' .

    $default  reduce using rule 4 (function_header)


State 6

    2 function_header: FUNCTION IDENTIFIER . parameters RETURNS type ';'
    3                | FUNCTION IDENTIFIER . RETURNS type ';'

    IDENTIFIER  shift, and go to state 12
    RETURNS     shift, and go to state 13

    parameters  go to state 14
    parameter   go to state 15


State 7

    0 $accept: function $end .

    $default  accept


State 8

    8 variable: error .

    $default  reduce using rule 8 (variable)


State 9

    7 variable: IDENTIFIER . ':' type IS statement_

    ':'  shift, and go to state 16


State 10

    1 function: function_header optional_variable . body

    BEGIN_  shift, and go to state 17

    body  go to state 18


State 11

    5 optional_variable: variable . optional_variable

    error       shift, and go to state 8
    IDENTIFIER  shift, and go to state 9

    BEGIN_  reduce using rule 6 (optional_variable)

    optional_variable  go to state 19
    variable           go to state 11


State 12

   12 parameter: IDENTIFIER . ':' type

    ':'  shift, and go to state 20


State 13

    3 function_header: FUNCTION IDENTIFIER RETURNS . type ';'

    INTEGER  shift, and go to state 21
    BOOLEAN  shift, and go to state 22
    REAL     shift, and go to state 23

    type  go to state 24


State 14

    2 function_header: FUNCTION IDENTIFIER parameters . RETURNS type ';'

    RETURNS  shift, and go to state 25


State 15

    9 parameters: parameter . optional_parameter

    $default  reduce using rule 11 (optional_parameter)

    optional_parameter  go to state 26


State 16

    7 variable: IDENTIFIER ':' . type IS statement_

    INTEGER  shift, and go to state 21
    BOOLEAN  shift, and go to state 22
    REAL     shift, and go to state 23

    type  go to state 27


State 17

   16 body: BEGIN_ . statement_ END ';'

    error         shift, and go to state 28
    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    BOOL_LITERAL  shift, and go to state 32
    NOTOP         shift, and go to state 33
    REDUCE        shift, and go to state 34
    IF            shift, and go to state 35
    CASE          shift, and go to state 36
    '('           shift, and go to state 37

    statement_  go to state 38
    statement   go to state 39
    expression  go to state 40
    binary      go to state 41
    relation    go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    primary     go to state 47


State 18

    1 function: function_header optional_variable body .

    $default  reduce using rule 1 (function)


State 19

    5 optional_variable: variable optional_variable .

    $default  reduce using rule 5 (optional_variable)


State 20

   12 parameter: IDENTIFIER ':' . type

    INTEGER  shift, and go to state 21
    BOOLEAN  shift, and go to state 22
    REAL     shift, and go to state 23

    type  go to state 48


State 21

   13 type: INTEGER .

    $default  reduce using rule 13 (type)


State 22

   15 type: BOOLEAN .

    $default  reduce using rule 15 (type)


State 23

   14 type: REAL .

    $default  reduce using rule 14 (type)


State 24

    3 function_header: FUNCTION IDENTIFIER RETURNS type . ';'

    ';'  shift, and go to state 49


State 25

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS . type ';'

    INTEGER  shift, and go to state 21
    BOOLEAN  shift, and go to state 22
    REAL     shift, and go to state 23

    type  go to state 50


State 26

    9 parameters: parameter optional_parameter .
   10 optional_parameter: optional_parameter . ',' parameter

    ','  shift, and go to state 51

    $default  reduce using rule 9 (parameters)


State 27

    7 variable: IDENTIFIER ':' type . IS statement_

    IS  shift, and go to state 52


State 28

   18 statement_: error .

    $default  reduce using rule 18 (statement_)


State 29

   55 primary: IDENTIFIER .

    $default  reduce using rule 55 (primary)


State 30

   52 primary: INT_LITERAL .

    $default  reduce using rule 52 (primary)


State 31

   53 primary: REAL_LITERAL .

    $default  reduce using rule 53 (primary)


State 32

   54 primary: BOOL_LITERAL .

    $default  reduce using rule 54 (primary)


State 33

   49 unary: NOTOP . primary

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    BOOL_LITERAL  shift, and go to state 32
    '('           shift, and go to state 37

    primary  go to state 53


State 34

   20 statement: REDUCE . operator reductions ENDREDUCE ';'

    ADDOP  shift, and go to state 54
    MULOP  shift, and go to state 55
    RELOP  shift, and go to state 56
    REMOP  shift, and go to state 57
    NOTOP  shift, and go to state 58
    EXPOP  shift, and go to state 59
    ANDOP  shift, and go to state 60
    OROP   shift, and go to state 61

    operator  go to state 62


State 35

   21 statement: IF . expression THEN statement_ ELSE statement_ ENDIF ';'

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    BOOL_LITERAL  shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 37

    expression  go to state 63
    binary      go to state 41
    relation    go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    primary     go to state 47


State 36

   22 statement: CASE . expression IS optional_cases OTHERS ARROW statement_ ENDCASE ';'

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    BOOL_LITERAL  shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 37

    expression  go to state 64
    binary      go to state 41
    relation    go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    primary     go to state 47


State 37

   51 primary: '(' . expression ')'

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    BOOL_LITERAL  shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 37

    expression  go to state 65
    binary      go to state 41
    relation    go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    primary     go to state 47


State 38

   16 body: BEGIN_ statement_ . END ';'

    END  shift, and go to state 66


State 39

   17 statement_: statement .

    $default  reduce using rule 17 (statement_)


State 40

   19 statement: expression . ';'
   36 expression: expression . OROP binary

    OROP  shift, and go to state 67
    ';'   shift, and go to state 68


State 41

   37 expression: binary .
   38 binary: binary . ANDOP relation

    ANDOP  shift, and go to state 69

    $default  reduce using rule 37 (expression)


State 42

   39 binary: relation .
   40 relation: relation . RELOP term

    RELOP  shift, and go to state 70

    $default  reduce using rule 39 (binary)


State 43

   41 relation: term .
   42 term: term . ADDOP factor

    ADDOP  shift, and go to state 71

    $default  reduce using rule 41 (relation)


State 44

   43 term: factor .
   44 factor: factor . MULOP exponent
   45       | factor . REMOP exponent

    MULOP  shift, and go to state 72
    REMOP  shift, and go to state 73

    $default  reduce using rule 43 (term)


State 45

   46 factor: exponent .
   48 exponent: exponent . EXPOP exponent

    EXPOP  shift, and go to state 74

    $default  reduce using rule 46 (factor)


State 46

   47 exponent: unary .

    $default  reduce using rule 47 (exponent)


State 47

   50 unary: primary .

    $default  reduce using rule 50 (unary)


State 48

   12 parameter: IDENTIFIER ':' type .

    $default  reduce using rule 12 (parameter)


State 49

    3 function_header: FUNCTION IDENTIFIER RETURNS type ';' .

    $default  reduce using rule 3 (function_header)


State 50

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type . ';'

    ';'  shift, and go to state 75


State 51

   10 optional_parameter: optional_parameter ',' . parameter

    IDENTIFIER  shift, and go to state 12

    parameter  go to state 76


State 52

    7 variable: IDENTIFIER ':' type IS . statement_

    error         shift, and go to state 28
    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    BOOL_LITERAL  shift, and go to state 32
    NOTOP         shift, and go to state 33
    REDUCE        shift, and go to state 34
    IF            shift, and go to state 35
    CASE          shift, and go to state 36
    '('           shift, and go to state 37

    statement_  go to state 77
    statement   go to state 39
    expression  go to state 40
    binary      go to state 41
    relation    go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    primary     go to state 47


State 53

   49 unary: NOTOP primary .

    $default  reduce using rule 49 (unary)


State 54

   26 operator: ADDOP .

    $default  reduce using rule 26 (operator)


State 55

   27 operator: MULOP .

    $default  reduce using rule 27 (operator)


State 56

   25 operator: RELOP .

    $default  reduce using rule 25 (operator)


State 57

   28 operator: REMOP .

    $default  reduce using rule 28 (operator)


State 58

   30 operator: NOTOP .

    $default  reduce using rule 30 (operator)


State 59

   29 operator: EXPOP .

    $default  reduce using rule 29 (operator)


State 60

   24 operator: ANDOP .

    $default  reduce using rule 24 (operator)


State 61

   23 operator: OROP .

    $default  reduce using rule 23 (operator)


State 62

   20 statement: REDUCE operator . reductions ENDREDUCE ';'

    $default  reduce using rule 35 (reductions)

    reductions  go to state 78


State 63

   21 statement: IF expression . THEN statement_ ELSE statement_ ENDIF ';'
   36 expression: expression . OROP binary

    OROP  shift, and go to state 67
    THEN  shift, and go to state 79


State 64

   22 statement: CASE expression . IS optional_cases OTHERS ARROW statement_ ENDCASE ';'
   36 expression: expression . OROP binary

    OROP  shift, and go to state 67
    IS    shift, and go to state 80


State 65

   36 expression: expression . OROP binary
   51 primary: '(' expression . ')'

    OROP  shift, and go to state 67
    ')'   shift, and go to state 81


State 66

   16 body: BEGIN_ statement_ END . ';'

    ';'  shift, and go to state 82


State 67

   36 expression: expression OROP . binary

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    BOOL_LITERAL  shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 37

    binary    go to state 83
    relation  go to state 42
    term      go to state 43
    factor    go to state 44
    exponent  go to state 45
    unary     go to state 46
    primary   go to state 47


State 68

   19 statement: expression ';' .

    $default  reduce using rule 19 (statement)


State 69

   38 binary: binary ANDOP . relation

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    BOOL_LITERAL  shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 37

    relation  go to state 84
    term      go to state 43
    factor    go to state 44
    exponent  go to state 45
    unary     go to state 46
    primary   go to state 47


State 70

   40 relation: relation RELOP . term

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    BOOL_LITERAL  shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 37

    term      go to state 85
    factor    go to state 44
    exponent  go to state 45
    unary     go to state 46
    primary   go to state 47


State 71

   42 term: term ADDOP . factor

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    BOOL_LITERAL  shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 37

    factor    go to state 86
    exponent  go to state 45
    unary     go to state 46
    primary   go to state 47


State 72

   44 factor: factor MULOP . exponent

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    BOOL_LITERAL  shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 37

    exponent  go to state 87
    unary     go to state 46
    primary   go to state 47


State 73

   45 factor: factor REMOP . exponent

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    BOOL_LITERAL  shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 37

    exponent  go to state 88
    unary     go to state 46
    primary   go to state 47


State 74

   48 exponent: exponent EXPOP . exponent

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    BOOL_LITERAL  shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 37

    exponent  go to state 89
    unary     go to state 46
    primary   go to state 47


State 75

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';' .

    $default  reduce using rule 2 (function_header)


State 76

   10 optional_parameter: optional_parameter ',' parameter .

    $default  reduce using rule 10 (optional_parameter)


State 77

    7 variable: IDENTIFIER ':' type IS statement_ .

    $default  reduce using rule 7 (variable)


State 78

   20 statement: REDUCE operator reductions . ENDREDUCE ';'
   34 reductions: reductions . statement_

    error         shift, and go to state 28
    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    BOOL_LITERAL  shift, and go to state 32
    NOTOP         shift, and go to state 33
    ENDREDUCE     shift, and go to state 90
    REDUCE        shift, and go to state 34
    IF            shift, and go to state 35
    CASE          shift, and go to state 36
    '('           shift, and go to state 37

    statement_  go to state 91
    statement   go to state 39
    expression  go to state 40
    binary      go to state 41
    relation    go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    primary     go to state 47


State 79

   21 statement: IF expression THEN . statement_ ELSE statement_ ENDIF ';'

    error         shift, and go to state 28
    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    BOOL_LITERAL  shift, and go to state 32
    NOTOP         shift, and go to state 33
    REDUCE        shift, and go to state 34
    IF            shift, and go to state 35
    CASE          shift, and go to state 36
    '('           shift, and go to state 37

    statement_  go to state 92
    statement   go to state 39
    expression  go to state 40
    binary      go to state 41
    relation    go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    primary     go to state 47


State 80

   22 statement: CASE expression IS . optional_cases OTHERS ARROW statement_ ENDCASE ';'

    error  shift, and go to state 93

    optional_cases  go to state 94


State 81

   51 primary: '(' expression ')' .

    $default  reduce using rule 51 (primary)


State 82

   16 body: BEGIN_ statement_ END ';' .

    $default  reduce using rule 16 (body)


State 83

   36 expression: expression OROP binary .
   38 binary: binary . ANDOP relation

    ANDOP  shift, and go to state 69

    $default  reduce using rule 36 (expression)


State 84

   38 binary: binary ANDOP relation .
   40 relation: relation . RELOP term

    RELOP  shift, and go to state 70

    $default  reduce using rule 38 (binary)


State 85

   40 relation: relation RELOP term .
   42 term: term . ADDOP factor

    ADDOP  shift, and go to state 71

    $default  reduce using rule 40 (relation)


State 86

   42 term: term ADDOP factor .
   44 factor: factor . MULOP exponent
   45       | factor . REMOP exponent

    MULOP  shift, and go to state 72
    REMOP  shift, and go to state 73

    $default  reduce using rule 42 (term)


State 87

   44 factor: factor MULOP exponent .
   48 exponent: exponent . EXPOP exponent

    EXPOP  shift, and go to state 74

    $default  reduce using rule 44 (factor)


State 88

   45 factor: factor REMOP exponent .
   48 exponent: exponent . EXPOP exponent

    EXPOP  shift, and go to state 74

    $default  reduce using rule 45 (factor)


State 89

   48 exponent: exponent . EXPOP exponent
   48         | exponent EXPOP exponent .

    EXPOP  shift, and go to state 74

    EXPOP     [reduce using rule 48 (exponent)]
    $default  reduce using rule 48 (exponent)


State 90

   20 statement: REDUCE operator reductions ENDREDUCE . ';'

    ';'  shift, and go to state 95


State 91

   34 reductions: reductions statement_ .

    $default  reduce using rule 34 (reductions)


State 92

   21 statement: IF expression THEN statement_ . ELSE statement_ ENDIF ';'

    ELSE  shift, and go to state 96


State 93

   32 optional_cases: error .

    $default  reduce using rule 32 (optional_cases)


State 94

   22 statement: CASE expression IS optional_cases . OTHERS ARROW statement_ ENDCASE ';'
   31 optional_cases: optional_cases . case

    WHEN    shift, and go to state 97
    OTHERS  shift, and go to state 98

    case  go to state 99


State 95

   20 statement: REDUCE operator reductions ENDREDUCE ';' .

    $default  reduce using rule 20 (statement)


State 96

   21 statement: IF expression THEN statement_ ELSE . statement_ ENDIF ';'

    error         shift, and go to state 28
    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    BOOL_LITERAL  shift, and go to state 32
    NOTOP         shift, and go to state 33
    REDUCE        shift, and go to state 34
    IF            shift, and go to state 35
    CASE          shift, and go to state 36
    '('           shift, and go to state 37

    statement_  go to state 100
    statement   go to state 39
    expression  go to state 40
    binary      go to state 41
    relation    go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    primary     go to state 47


State 97

   33 case: WHEN . INT_LITERAL ARROW statement_

    INT_LITERAL  shift, and go to state 101


State 98

   22 statement: CASE expression IS optional_cases OTHERS . ARROW statement_ ENDCASE ';'

    ARROW  shift, and go to state 102


State 99

   31 optional_cases: optional_cases case .

    $default  reduce using rule 31 (optional_cases)


State 100

   21 statement: IF expression THEN statement_ ELSE statement_ . ENDIF ';'

    ENDIF  shift, and go to state 103


State 101

   33 case: WHEN INT_LITERAL . ARROW statement_

    ARROW  shift, and go to state 104


State 102

   22 statement: CASE expression IS optional_cases OTHERS ARROW . statement_ ENDCASE ';'

    error         shift, and go to state 28
    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    BOOL_LITERAL  shift, and go to state 32
    NOTOP         shift, and go to state 33
    REDUCE        shift, and go to state 34
    IF            shift, and go to state 35
    CASE          shift, and go to state 36
    '('           shift, and go to state 37

    statement_  go to state 105
    statement   go to state 39
    expression  go to state 40
    binary      go to state 41
    relation    go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    primary     go to state 47


State 103

   21 statement: IF expression THEN statement_ ELSE statement_ ENDIF . ';'

    ';'  shift, and go to state 106


State 104

   33 case: WHEN INT_LITERAL ARROW . statement_

    error         shift, and go to state 28
    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    BOOL_LITERAL  shift, and go to state 32
    NOTOP         shift, and go to state 33
    REDUCE        shift, and go to state 34
    IF            shift, and go to state 35
    CASE          shift, and go to state 36
    '('           shift, and go to state 37

    statement_  go to state 107
    statement   go to state 39
    expression  go to state 40
    binary      go to state 41
    relation    go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    primary     go to state 47


State 105

   22 statement: CASE expression IS optional_cases OTHERS ARROW statement_ . ENDCASE ';'

    ENDCASE  shift, and go to state 108


State 106

   21 statement: IF expression THEN statement_ ELSE statement_ ENDIF ';' .

    $default  reduce using rule 21 (statement)


State 107

   33 case: WHEN INT_LITERAL ARROW statement_ .

    $default  reduce using rule 33 (case)


State 108

   22 statement: CASE expression IS optional_cases OTHERS ARROW statement_ ENDCASE . ';'

    ';'  shift, and go to state 109


State 109

   22 statement: CASE expression IS optional_cases OTHERS ARROW statement_ ENDCASE ';' .

    $default  reduce using rule 22 (statement)
