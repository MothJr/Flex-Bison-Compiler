Terminals unused in grammar

    REPOP


Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER optional_parameter RETURNS type ';'
    3                | error

    4 optional_variable: optional_variable variable
    5                  | %empty

    6 variable: IDENTIFIER ':' type IS statement_
    7         | error

    8 optional_parameter: optional_parameter RETURNS type ';'
    9                   | parameter

   10 parameter: IDENTIFIER ':' type
   11          | %empty

   12 type: INTEGER
   13     | REAL
   14     | BOOLEAN

   15 body: BEGIN_ statement_ END ';'

   16 statement_: statement ';'
   17           | error ';'

   18 statement: expression
   19          | REDUCE operator reductions ENDREDUCE
   20          | IF expression THEN statement_ ELSE statement_ ENDIF
   21          | CASE expression IS optional_cases OTHERS ARROW statement_ ENDCASE

   22 operator: ADDOP
   23         | MULOP REMOP
   24         | EXPOP

   25 optional_cases: optional_cases case
   26               | %empty

   27 case: WHEN INT_LITERAL ARROW statement_

   28 reductions: reductions statement_
   29           | %empty

   30 expression: expression OROP relation
   31           | expression_

   32 expression_: expression ANDOP relation
   33            | relation

   34 relation: relation RELOP term
   35         | term

   36 term: term ADDOP factor
   37     | factor

   38 factor: factor MULOP primary
   39       | factor REMOP
   40       | exponent

   41 exponent: factor EXPOP notion
   42         | notion

   43 notion: notion NOTOP primary
   44       | primary

   45 primary: '(' expression ')'
   46        | INT_LITERAL
   47        | REAL_LITERAL
   48        | BOOL_LITERAL IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 45
    ')' (41) 45
    ':' (58) 6 10
    ';' (59) 2 8 15 16 17
    error (256) 3 7 17
    IDENTIFIER (258) 2 6 10 48
    INT_LITERAL (259) 27 46
    REAL_LITERAL (260) 47
    BOOL_LITERAL (261) 48
    OROP (262) 30
    ANDOP (263) 32
    RELOP (264) 34
    REMOP (265) 23 39
    NOTOP (266) 43
    REPOP (267)
    ADDOP (268) 22 36
    MULOP (269) 23 38
    EXPOP (270) 24 41
    BEGIN_ (271) 15
    BOOLEAN (272) 14
    END (273) 15
    ENDREDUCE (274) 19
    FUNCTION (275) 2
    INTEGER (276) 12
    IS (277) 6 21
    REDUCE (278) 19
    RETURNS (279) 2 8
    IF (280) 20
    THEN (281) 20
    WHEN (282) 27
    ELSE (283) 20
    ENDIF (284) 20
    CASE (285) 21
    OTHERS (286) 21
    ARROW (287) 21 27
    ENDCASE (288) 21
    REAL (289) 13


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    function (40)
        on left: 1
        on right: 0
    function_header (41)
        on left: 2 3
        on right: 1
    optional_variable (42)
        on left: 4 5
        on right: 1 4
    variable (43)
        on left: 6 7
        on right: 4
    optional_parameter (44)
        on left: 8 9
        on right: 2 8
    parameter (45)
        on left: 10 11
        on right: 9
    type (46)
        on left: 12 13 14
        on right: 2 6 8 10
    body (47)
        on left: 15
        on right: 1
    statement_ (48)
        on left: 16 17
        on right: 6 15 20 21 27 28
    statement (49)
        on left: 18 19 20 21
        on right: 16
    operator (50)
        on left: 22 23 24
        on right: 19
    optional_cases (51)
        on left: 25 26
        on right: 21 25
    case (52)
        on left: 27
        on right: 25
    reductions (53)
        on left: 28 29
        on right: 19 28
    expression (54)
        on left: 30 31
        on right: 18 20 21 30 32 45
    expression_ (55)
        on left: 32 33
        on right: 31
    relation (56)
        on left: 34 35
        on right: 30 32 33 34
    term (57)
        on left: 36 37
        on right: 34 35 36
    factor (58)
        on left: 38 39 40
        on right: 36 37 38 39 41
    exponent (59)
        on left: 41 42
        on right: 40
    notion (60)
        on left: 43 44
        on right: 41 42 43
    primary (61)
        on left: 45 46 47 48
        on right: 38 43 44


State 0

    0 $accept: . function $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    function         go to state 3
    function_header  go to state 4


State 1

    3 function_header: error .

    $default  reduce using rule 3 (function_header)


State 2

    2 function_header: FUNCTION . IDENTIFIER optional_parameter RETURNS type ';'

    IDENTIFIER  shift, and go to state 5


State 3

    0 $accept: function . $end

    $end  shift, and go to state 6


State 4

    1 function: function_header . optional_variable body

    $default  reduce using rule 5 (optional_variable)

    optional_variable  go to state 7


State 5

    2 function_header: FUNCTION IDENTIFIER . optional_parameter RETURNS type ';'

    IDENTIFIER  shift, and go to state 8

    $default  reduce using rule 11 (parameter)

    optional_parameter  go to state 9
    parameter           go to state 10


State 6

    0 $accept: function $end .

    $default  accept


State 7

    1 function: function_header optional_variable . body
    4 optional_variable: optional_variable . variable

    error       shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    BEGIN_      shift, and go to state 13

    variable  go to state 14
    body      go to state 15


State 8

   10 parameter: IDENTIFIER . ':' type

    ':'  shift, and go to state 16


State 9

    2 function_header: FUNCTION IDENTIFIER optional_parameter . RETURNS type ';'
    8 optional_parameter: optional_parameter . RETURNS type ';'

    RETURNS  shift, and go to state 17


State 10

    9 optional_parameter: parameter .

    $default  reduce using rule 9 (optional_parameter)


State 11

    7 variable: error .

    $default  reduce using rule 7 (variable)


State 12

    6 variable: IDENTIFIER . ':' type IS statement_

    ':'  shift, and go to state 18


State 13

   15 body: BEGIN_ . statement_ END ';'

    error         shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    REDUCE        shift, and go to state 23
    IF            shift, and go to state 24
    CASE          shift, and go to state 25
    '('           shift, and go to state 26

    statement_   go to state 27
    statement    go to state 28
    expression   go to state 29
    expression_  go to state 30
    relation     go to state 31
    term         go to state 32
    factor       go to state 33
    exponent     go to state 34
    notion       go to state 35
    primary      go to state 36


State 14

    4 optional_variable: optional_variable variable .

    $default  reduce using rule 4 (optional_variable)


State 15

    1 function: function_header optional_variable body .

    $default  reduce using rule 1 (function)


State 16

   10 parameter: IDENTIFIER ':' . type

    BOOLEAN  shift, and go to state 37
    INTEGER  shift, and go to state 38
    REAL     shift, and go to state 39

    type  go to state 40


State 17

    2 function_header: FUNCTION IDENTIFIER optional_parameter RETURNS . type ';'
    8 optional_parameter: optional_parameter RETURNS . type ';'

    BOOLEAN  shift, and go to state 37
    INTEGER  shift, and go to state 38
    REAL     shift, and go to state 39

    type  go to state 41


State 18

    6 variable: IDENTIFIER ':' . type IS statement_

    BOOLEAN  shift, and go to state 37
    INTEGER  shift, and go to state 38
    REAL     shift, and go to state 39

    type  go to state 42


State 19

   17 statement_: error . ';'

    ';'  shift, and go to state 43


State 20

   46 primary: INT_LITERAL .

    $default  reduce using rule 46 (primary)


State 21

   47 primary: REAL_LITERAL .

    $default  reduce using rule 47 (primary)


State 22

   48 primary: BOOL_LITERAL . IDENTIFIER

    IDENTIFIER  shift, and go to state 44


State 23

   19 statement: REDUCE . operator reductions ENDREDUCE

    ADDOP  shift, and go to state 45
    MULOP  shift, and go to state 46
    EXPOP  shift, and go to state 47

    operator  go to state 48


State 24

   20 statement: IF . expression THEN statement_ ELSE statement_ ENDIF

    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 26

    expression   go to state 49
    expression_  go to state 30
    relation     go to state 31
    term         go to state 32
    factor       go to state 33
    exponent     go to state 34
    notion       go to state 35
    primary      go to state 36


State 25

   21 statement: CASE . expression IS optional_cases OTHERS ARROW statement_ ENDCASE

    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 26

    expression   go to state 50
    expression_  go to state 30
    relation     go to state 31
    term         go to state 32
    factor       go to state 33
    exponent     go to state 34
    notion       go to state 35
    primary      go to state 36


State 26

   45 primary: '(' . expression ')'

    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 26

    expression   go to state 51
    expression_  go to state 30
    relation     go to state 31
    term         go to state 32
    factor       go to state 33
    exponent     go to state 34
    notion       go to state 35
    primary      go to state 36


State 27

   15 body: BEGIN_ statement_ . END ';'

    END  shift, and go to state 52


State 28

   16 statement_: statement . ';'

    ';'  shift, and go to state 53


State 29

   18 statement: expression .
   30 expression: expression . OROP relation
   32 expression_: expression . ANDOP relation

    OROP   shift, and go to state 54
    ANDOP  shift, and go to state 55

    $default  reduce using rule 18 (statement)


State 30

   31 expression: expression_ .

    $default  reduce using rule 31 (expression)


State 31

   33 expression_: relation .
   34 relation: relation . RELOP term

    RELOP  shift, and go to state 56

    $default  reduce using rule 33 (expression_)


State 32

   35 relation: term .
   36 term: term . ADDOP factor

    ADDOP  shift, and go to state 57

    $default  reduce using rule 35 (relation)


State 33

   37 term: factor .
   38 factor: factor . MULOP primary
   39       | factor . REMOP
   41 exponent: factor . EXPOP notion

    REMOP  shift, and go to state 58
    MULOP  shift, and go to state 59
    EXPOP  shift, and go to state 60

    $default  reduce using rule 37 (term)


State 34

   40 factor: exponent .

    $default  reduce using rule 40 (factor)


State 35

   42 exponent: notion .
   43 notion: notion . NOTOP primary

    NOTOP  shift, and go to state 61

    $default  reduce using rule 42 (exponent)


State 36

   44 notion: primary .

    $default  reduce using rule 44 (notion)


State 37

   14 type: BOOLEAN .

    $default  reduce using rule 14 (type)


State 38

   12 type: INTEGER .

    $default  reduce using rule 12 (type)


State 39

   13 type: REAL .

    $default  reduce using rule 13 (type)


State 40

   10 parameter: IDENTIFIER ':' type .

    $default  reduce using rule 10 (parameter)


State 41

    2 function_header: FUNCTION IDENTIFIER optional_parameter RETURNS type . ';'
    8 optional_parameter: optional_parameter RETURNS type . ';'

    ';'  shift, and go to state 62


State 42

    6 variable: IDENTIFIER ':' type . IS statement_

    IS  shift, and go to state 63


State 43

   17 statement_: error ';' .

    $default  reduce using rule 17 (statement_)


State 44

   48 primary: BOOL_LITERAL IDENTIFIER .

    $default  reduce using rule 48 (primary)


State 45

   22 operator: ADDOP .

    $default  reduce using rule 22 (operator)


State 46

   23 operator: MULOP . REMOP

    REMOP  shift, and go to state 64


State 47

   24 operator: EXPOP .

    $default  reduce using rule 24 (operator)


State 48

   19 statement: REDUCE operator . reductions ENDREDUCE

    $default  reduce using rule 29 (reductions)

    reductions  go to state 65


State 49

   20 statement: IF expression . THEN statement_ ELSE statement_ ENDIF
   30 expression: expression . OROP relation
   32 expression_: expression . ANDOP relation

    OROP   shift, and go to state 54
    ANDOP  shift, and go to state 55
    THEN   shift, and go to state 66


State 50

   21 statement: CASE expression . IS optional_cases OTHERS ARROW statement_ ENDCASE
   30 expression: expression . OROP relation
   32 expression_: expression . ANDOP relation

    OROP   shift, and go to state 54
    ANDOP  shift, and go to state 55
    IS     shift, and go to state 67


State 51

   30 expression: expression . OROP relation
   32 expression_: expression . ANDOP relation
   45 primary: '(' expression . ')'

    OROP   shift, and go to state 54
    ANDOP  shift, and go to state 55
    ')'    shift, and go to state 68


State 52

   15 body: BEGIN_ statement_ END . ';'

    ';'  shift, and go to state 69


State 53

   16 statement_: statement ';' .

    $default  reduce using rule 16 (statement_)


State 54

   30 expression: expression OROP . relation

    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 26

    relation  go to state 70
    term      go to state 32
    factor    go to state 33
    exponent  go to state 34
    notion    go to state 35
    primary   go to state 36


State 55

   32 expression_: expression ANDOP . relation

    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 26

    relation  go to state 71
    term      go to state 32
    factor    go to state 33
    exponent  go to state 34
    notion    go to state 35
    primary   go to state 36


State 56

   34 relation: relation RELOP . term

    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 26

    term      go to state 72
    factor    go to state 33
    exponent  go to state 34
    notion    go to state 35
    primary   go to state 36


State 57

   36 term: term ADDOP . factor

    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 26

    factor    go to state 73
    exponent  go to state 34
    notion    go to state 35
    primary   go to state 36


State 58

   39 factor: factor REMOP .

    $default  reduce using rule 39 (factor)


State 59

   38 factor: factor MULOP . primary

    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 26

    primary  go to state 74


State 60

   41 exponent: factor EXPOP . notion

    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 26

    notion   go to state 75
    primary  go to state 36


State 61

   43 notion: notion NOTOP . primary

    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 26

    primary  go to state 76


State 62

    2 function_header: FUNCTION IDENTIFIER optional_parameter RETURNS type ';' .
    8 optional_parameter: optional_parameter RETURNS type ';' .

    RETURNS   reduce using rule 8 (optional_parameter)
    $default  reduce using rule 2 (function_header)


State 63

    6 variable: IDENTIFIER ':' type IS . statement_

    error         shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    REDUCE        shift, and go to state 23
    IF            shift, and go to state 24
    CASE          shift, and go to state 25
    '('           shift, and go to state 26

    statement_   go to state 77
    statement    go to state 28
    expression   go to state 29
    expression_  go to state 30
    relation     go to state 31
    term         go to state 32
    factor       go to state 33
    exponent     go to state 34
    notion       go to state 35
    primary      go to state 36


State 64

   23 operator: MULOP REMOP .

    $default  reduce using rule 23 (operator)


State 65

   19 statement: REDUCE operator reductions . ENDREDUCE
   28 reductions: reductions . statement_

    error         shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    ENDREDUCE     shift, and go to state 78
    REDUCE        shift, and go to state 23
    IF            shift, and go to state 24
    CASE          shift, and go to state 25
    '('           shift, and go to state 26

    statement_   go to state 79
    statement    go to state 28
    expression   go to state 29
    expression_  go to state 30
    relation     go to state 31
    term         go to state 32
    factor       go to state 33
    exponent     go to state 34
    notion       go to state 35
    primary      go to state 36


State 66

   20 statement: IF expression THEN . statement_ ELSE statement_ ENDIF

    error         shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    REDUCE        shift, and go to state 23
    IF            shift, and go to state 24
    CASE          shift, and go to state 25
    '('           shift, and go to state 26

    statement_   go to state 80
    statement    go to state 28
    expression   go to state 29
    expression_  go to state 30
    relation     go to state 31
    term         go to state 32
    factor       go to state 33
    exponent     go to state 34
    notion       go to state 35
    primary      go to state 36


State 67

   21 statement: CASE expression IS . optional_cases OTHERS ARROW statement_ ENDCASE

    $default  reduce using rule 26 (optional_cases)

    optional_cases  go to state 81


State 68

   45 primary: '(' expression ')' .

    $default  reduce using rule 45 (primary)


State 69

   15 body: BEGIN_ statement_ END ';' .

    $default  reduce using rule 15 (body)


State 70

   30 expression: expression OROP relation .
   34 relation: relation . RELOP term

    RELOP  shift, and go to state 56

    $default  reduce using rule 30 (expression)


State 71

   32 expression_: expression ANDOP relation .
   34 relation: relation . RELOP term

    RELOP  shift, and go to state 56

    $default  reduce using rule 32 (expression_)


State 72

   34 relation: relation RELOP term .
   36 term: term . ADDOP factor

    ADDOP  shift, and go to state 57

    $default  reduce using rule 34 (relation)


State 73

   36 term: term ADDOP factor .
   38 factor: factor . MULOP primary
   39       | factor . REMOP
   41 exponent: factor . EXPOP notion

    REMOP  shift, and go to state 58
    MULOP  shift, and go to state 59
    EXPOP  shift, and go to state 60

    $default  reduce using rule 36 (term)


State 74

   38 factor: factor MULOP primary .

    $default  reduce using rule 38 (factor)


State 75

   41 exponent: factor EXPOP notion .
   43 notion: notion . NOTOP primary

    NOTOP  shift, and go to state 61

    $default  reduce using rule 41 (exponent)


State 76

   43 notion: notion NOTOP primary .

    $default  reduce using rule 43 (notion)


State 77

    6 variable: IDENTIFIER ':' type IS statement_ .

    $default  reduce using rule 6 (variable)


State 78

   19 statement: REDUCE operator reductions ENDREDUCE .

    $default  reduce using rule 19 (statement)


State 79

   28 reductions: reductions statement_ .

    $default  reduce using rule 28 (reductions)


State 80

   20 statement: IF expression THEN statement_ . ELSE statement_ ENDIF

    ELSE  shift, and go to state 82


State 81

   21 statement: CASE expression IS optional_cases . OTHERS ARROW statement_ ENDCASE
   25 optional_cases: optional_cases . case

    WHEN    shift, and go to state 83
    OTHERS  shift, and go to state 84

    case  go to state 85


State 82

   20 statement: IF expression THEN statement_ ELSE . statement_ ENDIF

    error         shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    REDUCE        shift, and go to state 23
    IF            shift, and go to state 24
    CASE          shift, and go to state 25
    '('           shift, and go to state 26

    statement_   go to state 86
    statement    go to state 28
    expression   go to state 29
    expression_  go to state 30
    relation     go to state 31
    term         go to state 32
    factor       go to state 33
    exponent     go to state 34
    notion       go to state 35
    primary      go to state 36


State 83

   27 case: WHEN . INT_LITERAL ARROW statement_

    INT_LITERAL  shift, and go to state 87


State 84

   21 statement: CASE expression IS optional_cases OTHERS . ARROW statement_ ENDCASE

    ARROW  shift, and go to state 88


State 85

   25 optional_cases: optional_cases case .

    $default  reduce using rule 25 (optional_cases)


State 86

   20 statement: IF expression THEN statement_ ELSE statement_ . ENDIF

    ENDIF  shift, and go to state 89


State 87

   27 case: WHEN INT_LITERAL . ARROW statement_

    ARROW  shift, and go to state 90


State 88

   21 statement: CASE expression IS optional_cases OTHERS ARROW . statement_ ENDCASE

    error         shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    REDUCE        shift, and go to state 23
    IF            shift, and go to state 24
    CASE          shift, and go to state 25
    '('           shift, and go to state 26

    statement_   go to state 91
    statement    go to state 28
    expression   go to state 29
    expression_  go to state 30
    relation     go to state 31
    term         go to state 32
    factor       go to state 33
    exponent     go to state 34
    notion       go to state 35
    primary      go to state 36


State 89

   20 statement: IF expression THEN statement_ ELSE statement_ ENDIF .

    $default  reduce using rule 20 (statement)


State 90

   27 case: WHEN INT_LITERAL ARROW . statement_

    error         shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    REDUCE        shift, and go to state 23
    IF            shift, and go to state 24
    CASE          shift, and go to state 25
    '('           shift, and go to state 26

    statement_   go to state 92
    statement    go to state 28
    expression   go to state 29
    expression_  go to state 30
    relation     go to state 31
    term         go to state 32
    factor       go to state 33
    exponent     go to state 34
    notion       go to state 35
    primary      go to state 36


State 91

   21 statement: CASE expression IS optional_cases OTHERS ARROW statement_ . ENDCASE

    ENDCASE  shift, and go to state 93


State 92

   27 case: WHEN INT_LITERAL ARROW statement_ .

    $default  reduce using rule 27 (case)


State 93

   21 statement: CASE expression IS optional_cases OTHERS ARROW statement_ ENDCASE .

    $default  reduce using rule 21 (statement)
