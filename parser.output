Terminals unused in grammar

    REPOP
    IF
    THEN
    ELSE
    ENDIF


State 29 conflicts: 10 reduce/reduce
State 30 conflicts: 10 reduce/reduce
State 40 conflicts: 1 shift/reduce
State 41 conflicts: 1 shift/reduce
State 42 conflicts: 1 shift/reduce
State 48 conflicts: 7 shift/reduce
State 59 conflicts: 3 shift/reduce
State 72 conflicts: 10 reduce/reduce
State 77 conflicts: 1 shift/reduce
State 78 conflicts: 7 shift/reduce
State 79 conflicts: 1 shift/reduce
State 80 conflicts: 1 shift/reduce


Grammar

    0 $accept: function $end

    1 function: function_header '{' variable '}' body

    2 function_header: FUNCTION IDENTIFIER '[' parameters ']' RETURNS type ';'

    3 variable: IDENTIFIER ':' type IS statement

    4 parameters: parameter '{' ',' parameter '}'

    5 parameter: IDENTIFIER ':' type

    6 type: INTEGER
    7     | REAL
    8     | BOOLEAN

    9 body: BEGIN_ statement_ END ';'

   10 statement_: statement ';'
   11           | error ';'

   12 statement: expression ';'
   13          | REDUCE operator '{' reductions '}' ENDREDUCE ';'
   14          | CASE expression IS '{' case '}' OTHERS ARROW statement ENDCASE ';'

   15 operator: ADDOP
   16         | MULOP

   17 case: WHEN INT_LITERAL ARROW statement

   18 reductions: reductions statement_
   19           | %empty

   20 expression: '(' expression ')'
   21           | expression binary_operator expression
   22           | NOTOP expression
   23           | INT_LITERAL
   24           | REAL_LITERAL
   25           | BOOLEAN_LITERAL
   26           | IDENTIFIER
   27           | expression ANDOP relation
   28           | relation

   29 binary_operator: ADDOP
   30                | MULOP
   31                | REMOP
   32                | EXPOP
   33                | RELOP
   34                | ANDOP
   35                | OROP

   36 relation: relation RELOP term
   37         | term

   38 term: term ADDOP factor
   39     | factor

   40 factor: factor MULOP primary
   41       | primary

   42 primary: '(' expression ')'
   43        | INT_LITERAL
   44        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 20 42
    ')' (41) 20 42
    ',' (44) 4
    ':' (58) 3 5
    ';' (59) 2 9 10 11 12 13 14
    '[' (91) 2
    ']' (93) 2
    '{' (123) 1 4 13 14
    '}' (125) 1 4 13 14
    error (256) 11
    IDENTIFIER (258) 2 3 5 26 44
    INT_LITERAL (259) 17 23 43
    REAL_LITERAL (260) 24
    BOOLEAN_LITERAL (261) 25
    ADDOP (262) 15 29 38
    MULOP (263) 16 30 40
    RELOP (264) 33 36
    ANDOP (265) 27 34
    REMOP (266) 31
    EXPOP (267) 32
    OROP (268) 35
    NOTOP (269) 22
    REPOP (270)
    BEGIN_ (271) 9
    BOOLEAN (272) 8
    END (273) 9
    ENDREDUCE (274) 13
    FUNCTION (275) 2
    INTEGER (276) 6
    IS (277) 3 14
    REDUCE (278) 13
    RETURNS (279) 2
    IF (280)
    THEN (281)
    WHEN (282) 17
    ELSE (283)
    ENDIF (284)
    CASE (285) 14
    OTHERS (286) 14
    ARROW (287) 14 17
    ENDCASE (288) 14
    REAL (289) 7


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    function (45)
        on left: 1
        on right: 0
    function_header (46)
        on left: 2
        on right: 1
    variable (47)
        on left: 3
        on right: 1
    parameters (48)
        on left: 4
        on right: 2
    parameter (49)
        on left: 5
        on right: 4
    type (50)
        on left: 6 7 8
        on right: 2 3 5
    body (51)
        on left: 9
        on right: 1
    statement_ (52)
        on left: 10 11
        on right: 9 18
    statement (53)
        on left: 12 13 14
        on right: 3 10 14 17
    operator (54)
        on left: 15 16
        on right: 13
    case (55)
        on left: 17
        on right: 14
    reductions (56)
        on left: 18 19
        on right: 13 18
    expression (57)
        on left: 20 21 22 23 24 25 26 27 28
        on right: 12 14 20 21 22 27 42
    binary_operator (58)
        on left: 29 30 31 32 33 34 35
        on right: 21
    relation (59)
        on left: 36 37
        on right: 27 28 36
    term (60)
        on left: 38 39
        on right: 36 37 38
    factor (61)
        on left: 40 41
        on right: 38 39 40
    primary (62)
        on left: 42 43 44
        on right: 40 41


State 0

    0 $accept: . function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    2 function_header: FUNCTION . IDENTIFIER '[' parameters ']' RETURNS type ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function . $end

    $end  shift, and go to state 5


State 3

    1 function: function_header . '{' variable '}' body

    '{'  shift, and go to state 6


State 4

    2 function_header: FUNCTION IDENTIFIER . '[' parameters ']' RETURNS type ';'

    '['  shift, and go to state 7


State 5

    0 $accept: function $end .

    $default  accept


State 6

    1 function: function_header '{' . variable '}' body

    IDENTIFIER  shift, and go to state 8

    variable  go to state 9


State 7

    2 function_header: FUNCTION IDENTIFIER '[' . parameters ']' RETURNS type ';'

    IDENTIFIER  shift, and go to state 10

    parameters  go to state 11
    parameter   go to state 12


State 8

    3 variable: IDENTIFIER . ':' type IS statement

    ':'  shift, and go to state 13


State 9

    1 function: function_header '{' variable . '}' body

    '}'  shift, and go to state 14


State 10

    5 parameter: IDENTIFIER . ':' type

    ':'  shift, and go to state 15


State 11

    2 function_header: FUNCTION IDENTIFIER '[' parameters . ']' RETURNS type ';'

    ']'  shift, and go to state 16


State 12

    4 parameters: parameter . '{' ',' parameter '}'

    '{'  shift, and go to state 17


State 13

    3 variable: IDENTIFIER ':' . type IS statement

    BOOLEAN  shift, and go to state 18
    INTEGER  shift, and go to state 19
    REAL     shift, and go to state 20

    type  go to state 21


State 14

    1 function: function_header '{' variable '}' . body

    BEGIN_  shift, and go to state 22

    body  go to state 23


State 15

    5 parameter: IDENTIFIER ':' . type

    BOOLEAN  shift, and go to state 18
    INTEGER  shift, and go to state 19
    REAL     shift, and go to state 20

    type  go to state 24


State 16

    2 function_header: FUNCTION IDENTIFIER '[' parameters ']' . RETURNS type ';'

    RETURNS  shift, and go to state 25


State 17

    4 parameters: parameter '{' . ',' parameter '}'

    ','  shift, and go to state 26


State 18

    8 type: BOOLEAN .

    $default  reduce using rule 8 (type)


State 19

    6 type: INTEGER .

    $default  reduce using rule 6 (type)


State 20

    7 type: REAL .

    $default  reduce using rule 7 (type)


State 21

    3 variable: IDENTIFIER ':' type . IS statement

    IS  shift, and go to state 27


State 22

    9 body: BEGIN_ . statement_ END ';'

    error            shift, and go to state 28
    IDENTIFIER       shift, and go to state 29
    INT_LITERAL      shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    BOOLEAN_LITERAL  shift, and go to state 32
    NOTOP            shift, and go to state 33
    REDUCE           shift, and go to state 34
    CASE             shift, and go to state 35
    '('              shift, and go to state 36

    statement_  go to state 37
    statement   go to state 38
    expression  go to state 39
    relation    go to state 40
    term        go to state 41
    factor      go to state 42
    primary     go to state 43


State 23

    1 function: function_header '{' variable '}' body .

    $default  reduce using rule 1 (function)


State 24

    5 parameter: IDENTIFIER ':' type .

    $default  reduce using rule 5 (parameter)


State 25

    2 function_header: FUNCTION IDENTIFIER '[' parameters ']' RETURNS . type ';'

    BOOLEAN  shift, and go to state 18
    INTEGER  shift, and go to state 19
    REAL     shift, and go to state 20

    type  go to state 44


State 26

    4 parameters: parameter '{' ',' . parameter '}'

    IDENTIFIER  shift, and go to state 10

    parameter  go to state 45


State 27

    3 variable: IDENTIFIER ':' type IS . statement

    IDENTIFIER       shift, and go to state 29
    INT_LITERAL      shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    BOOLEAN_LITERAL  shift, and go to state 32
    NOTOP            shift, and go to state 33
    REDUCE           shift, and go to state 34
    CASE             shift, and go to state 35
    '('              shift, and go to state 36

    statement   go to state 46
    expression  go to state 39
    relation    go to state 40
    term        go to state 41
    factor      go to state 42
    primary     go to state 43


State 28

   11 statement_: error . ';'

    ';'  shift, and go to state 47


State 29

   26 expression: IDENTIFIER .
   44 primary: IDENTIFIER .

    ADDOP     reduce using rule 26 (expression)
    ADDOP     [reduce using rule 44 (primary)]
    MULOP     reduce using rule 26 (expression)
    MULOP     [reduce using rule 44 (primary)]
    RELOP     reduce using rule 26 (expression)
    RELOP     [reduce using rule 44 (primary)]
    ANDOP     reduce using rule 26 (expression)
    ANDOP     [reduce using rule 44 (primary)]
    REMOP     reduce using rule 26 (expression)
    REMOP     [reduce using rule 44 (primary)]
    EXPOP     reduce using rule 26 (expression)
    EXPOP     [reduce using rule 44 (primary)]
    OROP      reduce using rule 26 (expression)
    OROP      [reduce using rule 44 (primary)]
    IS        reduce using rule 26 (expression)
    IS        [reduce using rule 44 (primary)]
    ';'       reduce using rule 26 (expression)
    ';'       [reduce using rule 44 (primary)]
    ')'       reduce using rule 26 (expression)
    ')'       [reduce using rule 44 (primary)]
    $default  reduce using rule 26 (expression)


State 30

   23 expression: INT_LITERAL .
   43 primary: INT_LITERAL .

    ADDOP     reduce using rule 23 (expression)
    ADDOP     [reduce using rule 43 (primary)]
    MULOP     reduce using rule 23 (expression)
    MULOP     [reduce using rule 43 (primary)]
    RELOP     reduce using rule 23 (expression)
    RELOP     [reduce using rule 43 (primary)]
    ANDOP     reduce using rule 23 (expression)
    ANDOP     [reduce using rule 43 (primary)]
    REMOP     reduce using rule 23 (expression)
    REMOP     [reduce using rule 43 (primary)]
    EXPOP     reduce using rule 23 (expression)
    EXPOP     [reduce using rule 43 (primary)]
    OROP      reduce using rule 23 (expression)
    OROP      [reduce using rule 43 (primary)]
    IS        reduce using rule 23 (expression)
    IS        [reduce using rule 43 (primary)]
    ';'       reduce using rule 23 (expression)
    ';'       [reduce using rule 43 (primary)]
    ')'       reduce using rule 23 (expression)
    ')'       [reduce using rule 43 (primary)]
    $default  reduce using rule 23 (expression)


State 31

   24 expression: REAL_LITERAL .

    $default  reduce using rule 24 (expression)


State 32

   25 expression: BOOLEAN_LITERAL .

    $default  reduce using rule 25 (expression)


State 33

   22 expression: NOTOP . expression

    IDENTIFIER       shift, and go to state 29
    INT_LITERAL      shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    BOOLEAN_LITERAL  shift, and go to state 32
    NOTOP            shift, and go to state 33
    '('              shift, and go to state 36

    expression  go to state 48
    relation    go to state 40
    term        go to state 41
    factor      go to state 42
    primary     go to state 43


State 34

   13 statement: REDUCE . operator '{' reductions '}' ENDREDUCE ';'

    ADDOP  shift, and go to state 49
    MULOP  shift, and go to state 50

    operator  go to state 51


State 35

   14 statement: CASE . expression IS '{' case '}' OTHERS ARROW statement ENDCASE ';'

    IDENTIFIER       shift, and go to state 29
    INT_LITERAL      shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    BOOLEAN_LITERAL  shift, and go to state 32
    NOTOP            shift, and go to state 33
    '('              shift, and go to state 36

    expression  go to state 52
    relation    go to state 40
    term        go to state 41
    factor      go to state 42
    primary     go to state 43


State 36

   20 expression: '(' . expression ')'
   42 primary: '(' . expression ')'

    IDENTIFIER       shift, and go to state 29
    INT_LITERAL      shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    BOOLEAN_LITERAL  shift, and go to state 32
    NOTOP            shift, and go to state 33
    '('              shift, and go to state 36

    expression  go to state 53
    relation    go to state 40
    term        go to state 41
    factor      go to state 42
    primary     go to state 43


State 37

    9 body: BEGIN_ statement_ . END ';'

    END  shift, and go to state 54


State 38

   10 statement_: statement . ';'

    ';'  shift, and go to state 55


State 39

   12 statement: expression . ';'
   21 expression: expression . binary_operator expression
   27           | expression . ANDOP relation

    ADDOP  shift, and go to state 56
    MULOP  shift, and go to state 57
    RELOP  shift, and go to state 58
    ANDOP  shift, and go to state 59
    REMOP  shift, and go to state 60
    EXPOP  shift, and go to state 61
    OROP   shift, and go to state 62
    ';'    shift, and go to state 63

    binary_operator  go to state 64


State 40

   28 expression: relation .
   36 relation: relation . RELOP term

    RELOP  shift, and go to state 65

    RELOP     [reduce using rule 28 (expression)]
    $default  reduce using rule 28 (expression)


State 41

   37 relation: term .
   38 term: term . ADDOP factor

    ADDOP  shift, and go to state 66

    ADDOP     [reduce using rule 37 (relation)]
    $default  reduce using rule 37 (relation)


State 42

   39 term: factor .
   40 factor: factor . MULOP primary

    MULOP  shift, and go to state 67

    MULOP     [reduce using rule 39 (term)]
    $default  reduce using rule 39 (term)


State 43

   41 factor: primary .

    $default  reduce using rule 41 (factor)


State 44

    2 function_header: FUNCTION IDENTIFIER '[' parameters ']' RETURNS type . ';'

    ';'  shift, and go to state 68


State 45

    4 parameters: parameter '{' ',' parameter . '}'

    '}'  shift, and go to state 69


State 46

    3 variable: IDENTIFIER ':' type IS statement .

    $default  reduce using rule 3 (variable)


State 47

   11 statement_: error ';' .

    $default  reduce using rule 11 (statement_)


State 48

   21 expression: expression . binary_operator expression
   22           | NOTOP expression .
   27           | expression . ANDOP relation

    ADDOP  shift, and go to state 56
    MULOP  shift, and go to state 57
    RELOP  shift, and go to state 58
    ANDOP  shift, and go to state 59
    REMOP  shift, and go to state 60
    EXPOP  shift, and go to state 61
    OROP   shift, and go to state 62

    ADDOP     [reduce using rule 22 (expression)]
    MULOP     [reduce using rule 22 (expression)]
    RELOP     [reduce using rule 22 (expression)]
    ANDOP     [reduce using rule 22 (expression)]
    REMOP     [reduce using rule 22 (expression)]
    EXPOP     [reduce using rule 22 (expression)]
    OROP      [reduce using rule 22 (expression)]
    $default  reduce using rule 22 (expression)

    binary_operator  go to state 64


State 49

   15 operator: ADDOP .

    $default  reduce using rule 15 (operator)


State 50

   16 operator: MULOP .

    $default  reduce using rule 16 (operator)


State 51

   13 statement: REDUCE operator . '{' reductions '}' ENDREDUCE ';'

    '{'  shift, and go to state 70


State 52

   14 statement: CASE expression . IS '{' case '}' OTHERS ARROW statement ENDCASE ';'
   21 expression: expression . binary_operator expression
   27           | expression . ANDOP relation

    ADDOP  shift, and go to state 56
    MULOP  shift, and go to state 57
    RELOP  shift, and go to state 58
    ANDOP  shift, and go to state 59
    REMOP  shift, and go to state 60
    EXPOP  shift, and go to state 61
    OROP   shift, and go to state 62
    IS     shift, and go to state 71

    binary_operator  go to state 64


State 53

   20 expression: '(' expression . ')'
   21           | expression . binary_operator expression
   27           | expression . ANDOP relation
   42 primary: '(' expression . ')'

    ADDOP  shift, and go to state 56
    MULOP  shift, and go to state 57
    RELOP  shift, and go to state 58
    ANDOP  shift, and go to state 59
    REMOP  shift, and go to state 60
    EXPOP  shift, and go to state 61
    OROP   shift, and go to state 62
    ')'    shift, and go to state 72

    binary_operator  go to state 64


State 54

    9 body: BEGIN_ statement_ END . ';'

    ';'  shift, and go to state 73


State 55

   10 statement_: statement ';' .

    $default  reduce using rule 10 (statement_)


State 56

   29 binary_operator: ADDOP .

    $default  reduce using rule 29 (binary_operator)


State 57

   30 binary_operator: MULOP .

    $default  reduce using rule 30 (binary_operator)


State 58

   33 binary_operator: RELOP .

    $default  reduce using rule 33 (binary_operator)


State 59

   27 expression: expression ANDOP . relation
   34 binary_operator: ANDOP .

    IDENTIFIER   shift, and go to state 74
    INT_LITERAL  shift, and go to state 75
    '('          shift, and go to state 76

    IDENTIFIER   [reduce using rule 34 (binary_operator)]
    INT_LITERAL  [reduce using rule 34 (binary_operator)]
    '('          [reduce using rule 34 (binary_operator)]
    $default     reduce using rule 34 (binary_operator)

    relation  go to state 77
    term      go to state 41
    factor    go to state 42
    primary   go to state 43


State 60

   31 binary_operator: REMOP .

    $default  reduce using rule 31 (binary_operator)


State 61

   32 binary_operator: EXPOP .

    $default  reduce using rule 32 (binary_operator)


State 62

   35 binary_operator: OROP .

    $default  reduce using rule 35 (binary_operator)


State 63

   12 statement: expression ';' .

    $default  reduce using rule 12 (statement)


State 64

   21 expression: expression binary_operator . expression

    IDENTIFIER       shift, and go to state 29
    INT_LITERAL      shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    BOOLEAN_LITERAL  shift, and go to state 32
    NOTOP            shift, and go to state 33
    '('              shift, and go to state 36

    expression  go to state 78
    relation    go to state 40
    term        go to state 41
    factor      go to state 42
    primary     go to state 43


State 65

   36 relation: relation RELOP . term

    IDENTIFIER   shift, and go to state 74
    INT_LITERAL  shift, and go to state 75
    '('          shift, and go to state 76

    term     go to state 79
    factor   go to state 42
    primary  go to state 43


State 66

   38 term: term ADDOP . factor

    IDENTIFIER   shift, and go to state 74
    INT_LITERAL  shift, and go to state 75
    '('          shift, and go to state 76

    factor   go to state 80
    primary  go to state 43


State 67

   40 factor: factor MULOP . primary

    IDENTIFIER   shift, and go to state 74
    INT_LITERAL  shift, and go to state 75
    '('          shift, and go to state 76

    primary  go to state 81


State 68

    2 function_header: FUNCTION IDENTIFIER '[' parameters ']' RETURNS type ';' .

    $default  reduce using rule 2 (function_header)


State 69

    4 parameters: parameter '{' ',' parameter '}' .

    $default  reduce using rule 4 (parameters)


State 70

   13 statement: REDUCE operator '{' . reductions '}' ENDREDUCE ';'

    $default  reduce using rule 19 (reductions)

    reductions  go to state 82


State 71

   14 statement: CASE expression IS . '{' case '}' OTHERS ARROW statement ENDCASE ';'

    '{'  shift, and go to state 83


State 72

   20 expression: '(' expression ')' .
   42 primary: '(' expression ')' .

    ADDOP     reduce using rule 20 (expression)
    ADDOP     [reduce using rule 42 (primary)]
    MULOP     reduce using rule 20 (expression)
    MULOP     [reduce using rule 42 (primary)]
    RELOP     reduce using rule 20 (expression)
    RELOP     [reduce using rule 42 (primary)]
    ANDOP     reduce using rule 20 (expression)
    ANDOP     [reduce using rule 42 (primary)]
    REMOP     reduce using rule 20 (expression)
    REMOP     [reduce using rule 42 (primary)]
    EXPOP     reduce using rule 20 (expression)
    EXPOP     [reduce using rule 42 (primary)]
    OROP      reduce using rule 20 (expression)
    OROP      [reduce using rule 42 (primary)]
    IS        reduce using rule 20 (expression)
    IS        [reduce using rule 42 (primary)]
    ';'       reduce using rule 20 (expression)
    ';'       [reduce using rule 42 (primary)]
    ')'       reduce using rule 20 (expression)
    ')'       [reduce using rule 42 (primary)]
    $default  reduce using rule 20 (expression)


State 73

    9 body: BEGIN_ statement_ END ';' .

    $default  reduce using rule 9 (body)


State 74

   44 primary: IDENTIFIER .

    $default  reduce using rule 44 (primary)


State 75

   43 primary: INT_LITERAL .

    $default  reduce using rule 43 (primary)


State 76

   42 primary: '(' . expression ')'

    IDENTIFIER       shift, and go to state 29
    INT_LITERAL      shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    BOOLEAN_LITERAL  shift, and go to state 32
    NOTOP            shift, and go to state 33
    '('              shift, and go to state 36

    expression  go to state 84
    relation    go to state 40
    term        go to state 41
    factor      go to state 42
    primary     go to state 43


State 77

   27 expression: expression ANDOP relation .
   36 relation: relation . RELOP term

    RELOP  shift, and go to state 65

    RELOP     [reduce using rule 27 (expression)]
    $default  reduce using rule 27 (expression)


State 78

   21 expression: expression . binary_operator expression
   21           | expression binary_operator expression .
   27           | expression . ANDOP relation

    ADDOP  shift, and go to state 56
    MULOP  shift, and go to state 57
    RELOP  shift, and go to state 58
    ANDOP  shift, and go to state 59
    REMOP  shift, and go to state 60
    EXPOP  shift, and go to state 61
    OROP   shift, and go to state 62

    ADDOP     [reduce using rule 21 (expression)]
    MULOP     [reduce using rule 21 (expression)]
    RELOP     [reduce using rule 21 (expression)]
    ANDOP     [reduce using rule 21 (expression)]
    REMOP     [reduce using rule 21 (expression)]
    EXPOP     [reduce using rule 21 (expression)]
    OROP      [reduce using rule 21 (expression)]
    $default  reduce using rule 21 (expression)

    binary_operator  go to state 64


State 79

   36 relation: relation RELOP term .
   38 term: term . ADDOP factor

    ADDOP  shift, and go to state 66

    ADDOP     [reduce using rule 36 (relation)]
    $default  reduce using rule 36 (relation)


State 80

   38 term: term ADDOP factor .
   40 factor: factor . MULOP primary

    MULOP  shift, and go to state 67

    MULOP     [reduce using rule 38 (term)]
    $default  reduce using rule 38 (term)


State 81

   40 factor: factor MULOP primary .

    $default  reduce using rule 40 (factor)


State 82

   13 statement: REDUCE operator '{' reductions . '}' ENDREDUCE ';'
   18 reductions: reductions . statement_

    error            shift, and go to state 28
    IDENTIFIER       shift, and go to state 29
    INT_LITERAL      shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    BOOLEAN_LITERAL  shift, and go to state 32
    NOTOP            shift, and go to state 33
    REDUCE           shift, and go to state 34
    CASE             shift, and go to state 35
    '}'              shift, and go to state 85
    '('              shift, and go to state 36

    statement_  go to state 86
    statement   go to state 38
    expression  go to state 39
    relation    go to state 40
    term        go to state 41
    factor      go to state 42
    primary     go to state 43


State 83

   14 statement: CASE expression IS '{' . case '}' OTHERS ARROW statement ENDCASE ';'

    WHEN  shift, and go to state 87

    case  go to state 88


State 84

   21 expression: expression . binary_operator expression
   27           | expression . ANDOP relation
   42 primary: '(' expression . ')'

    ADDOP  shift, and go to state 56
    MULOP  shift, and go to state 57
    RELOP  shift, and go to state 58
    ANDOP  shift, and go to state 59
    REMOP  shift, and go to state 60
    EXPOP  shift, and go to state 61
    OROP   shift, and go to state 62
    ')'    shift, and go to state 89

    binary_operator  go to state 64


State 85

   13 statement: REDUCE operator '{' reductions '}' . ENDREDUCE ';'

    ENDREDUCE  shift, and go to state 90


State 86

   18 reductions: reductions statement_ .

    $default  reduce using rule 18 (reductions)


State 87

   17 case: WHEN . INT_LITERAL ARROW statement

    INT_LITERAL  shift, and go to state 91


State 88

   14 statement: CASE expression IS '{' case . '}' OTHERS ARROW statement ENDCASE ';'

    '}'  shift, and go to state 92


State 89

   42 primary: '(' expression ')' .

    $default  reduce using rule 42 (primary)


State 90

   13 statement: REDUCE operator '{' reductions '}' ENDREDUCE . ';'

    ';'  shift, and go to state 93


State 91

   17 case: WHEN INT_LITERAL . ARROW statement

    ARROW  shift, and go to state 94


State 92

   14 statement: CASE expression IS '{' case '}' . OTHERS ARROW statement ENDCASE ';'

    OTHERS  shift, and go to state 95


State 93

   13 statement: REDUCE operator '{' reductions '}' ENDREDUCE ';' .

    $default  reduce using rule 13 (statement)


State 94

   17 case: WHEN INT_LITERAL ARROW . statement

    IDENTIFIER       shift, and go to state 29
    INT_LITERAL      shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    BOOLEAN_LITERAL  shift, and go to state 32
    NOTOP            shift, and go to state 33
    REDUCE           shift, and go to state 34
    CASE             shift, and go to state 35
    '('              shift, and go to state 36

    statement   go to state 96
    expression  go to state 39
    relation    go to state 40
    term        go to state 41
    factor      go to state 42
    primary     go to state 43


State 95

   14 statement: CASE expression IS '{' case '}' OTHERS . ARROW statement ENDCASE ';'

    ARROW  shift, and go to state 97


State 96

   17 case: WHEN INT_LITERAL ARROW statement .

    $default  reduce using rule 17 (case)


State 97

   14 statement: CASE expression IS '{' case '}' OTHERS ARROW . statement ENDCASE ';'

    IDENTIFIER       shift, and go to state 29
    INT_LITERAL      shift, and go to state 30
    REAL_LITERAL     shift, and go to state 31
    BOOLEAN_LITERAL  shift, and go to state 32
    NOTOP            shift, and go to state 33
    REDUCE           shift, and go to state 34
    CASE             shift, and go to state 35
    '('              shift, and go to state 36

    statement   go to state 98
    expression  go to state 39
    relation    go to state 40
    term        go to state 41
    factor      go to state 42
    primary     go to state 43


State 98

   14 statement: CASE expression IS '{' case '}' OTHERS ARROW statement . ENDCASE ';'

    ENDCASE  shift, and go to state 99


State 99

   14 statement: CASE expression IS '{' case '}' OTHERS ARROW statement ENDCASE . ';'

    ';'  shift, and go to state 100


State 100

   14 statement: CASE expression IS '{' case '}' OTHERS ARROW statement ENDCASE ';' .

    $default  reduce using rule 14 (statement)
